@prefix       : <http://www.ejemplo.org/#> .
@prefix  owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix  xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix  rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .

: a owl:Ontology ;
   rdfs:comment "A ATM Ontology for matching among components in ATM model" .

#-----------------------------------------------------------------------------------------------
#-- Declaration of Classes ----------- Versiï¿½n 3.0 junio 2020 -----------------------------
#-----------------------------------------------------------------------------------------------

:Context       a owl:Class .

:Condition     a owl:Class ;
                rdfs:label   "Class: Condition used by Pre, Post and Invariant" ;
                rdfs:comment "Condition".                 

:ComponentType a owl:Class ;
                rdfs:label   "Class: Instances of Component Type" ;
                rdfs:comment "Instances of Components";
                rdfs:subClassOf   
                     [ a owl:Restriction ;
                         owl:onProperty :hasInterface ;  # Restriccion sobre el numero de interfases
                         owl:minCardinality 1 ] .  # Un componente tiene minimo 1 interfaz

# Modificar los tipos de la ontologia a los Tipos de CORBA-IDL+
:DataType        a owl:Class .
   :BasicType rdfs:subClassOf :DataType .         
       :Null        rdfs:subClassOf :BasicType .
       :Void        rdfs:subClassOf :BasicType .
       :Boolean     rdfs:subClassOf :BasicType .
            :False     rdfs:subClassOf :Boolean .
            :True     rdfs:subClassOf :Boolean .
       :Char          rdfs:subClassOf :BasicType .
       :Double      rdfs:subClassOf :BasicType .       
          :Float       rdfs:subClassOf :Double .
       :Long        rdfs:subClassOf :BasicType .
          :Integer     rdfs:subClassOf :Long .
          :Short       rdfs:subClassOf :Integer .
          :Byte        rdfs:subClassOf :Short .
   :StructuredType rdfs:subClassOf :DataType .
       :List        rdfs:subClassOf :StructuredType .
       :Array       rdfs:subClassOf :StructuredType .
   :AnotherType rdfs:subClassOf :DataType .

:Domain    a owl:Class .
     :Multimedia    rdfs:subClassOf :Domain .

:Instance  a owl:Class .

:Interface a owl:Class .

:Interface rdfs:subClassOf 
       [ a owl:Restriction ;
           owl:onProperty :hasNumMethods ;
           owl:minCardinality 1 ] .             # Restriccion sobre el numero de interfases   
     :Provided    rdfs:subClassOf :Interface .
     :Required    rdfs:subClassOf :Interface .
     :Provided    owl:disjointWith :Required .
     :Required    owl:disjointWith :Provided .

:Method          a owl:Class .

:Operator        a owl:Class .

:OperatorLogic   a owl:Class .

:Parameter       a owl:Class .

:ParameterDirection    a owl:Class .
     :Input       rdfs:subClassOf :ParameterDirection .
     :OutPut      rdfs:subClassOf :ParameterDirection .
     :InputOutput rdfs:subClassOf :ParameterDirection .      
     
:Pattern         a owl:Class .
     :ArchitecturalPattern  rdfs:subClassOf :Pattern .
     :DesignPattern         rdfs:subClassOf :Pattern .

:Return          a owl:Class .

:Requirements    a owl:Class .
     :FunctionalRequirements        rdfs:subClassOf :Requirements .
     :NonFunctionalRequirements_QoS rdfs:subClassOf :Requirements .
     :AnswerTime        rdfs:subClassOf :NonFunctionalRequirements_QoS .
     :ExecutionTime    rdfs:subClassOf :NonFunctionalRequirements_QoS .
     :MemoryResource rdfs:subClassOf :NonFunctionalRequirements_QoS .
     :Performance        rdfs:subClassOf :NonFunctionalRequirements_QoS .
     :QoSAttribute       rdfs:subClassOf :NonFunctionalRequirements_QoS .
     :QoSMetric           rdfs:subClassOf :NonFunctionalRequirements_QoS .
     :Security              rdfs:subClassOf :NonFunctionalRequirements_QoS .

:Variable        a owl:Class .

:Visibility      a owl:Class .

:Vocabulary  a owl:Class .  # Clase para verificar Dominios de Aplicacion
                                           # Usando el archivo vocabularydomain.n3

 # Quitar del archivo vocabularydomain.n3 los prefijos y el nombre de la clase
 #   y ponerlos aqui!
 #  @prefix      :   <http://www.ejemplo.org/#> .
 #  @prefix owl:  <http://www.w3.org/2002/07/owl#>.
 #  :Vocabulary  a owl:Class .

#----------------------------------------------------------------------------------------------
#-- Data type Properties Declaration ----------------------------------------------------------
#----------------------------------------------------------------------------------------------

 #-- Component properties ----------------------

  :hasComponentID    a owl:DatatypeProperty .
     :hasComponentID  rdfs:domain   :ComponentType .
     :hasComponentID  rdfs:range xsd:string .  
  :hasNameDomain     a owl:DatatypeProperty .
     :hasNameDomain   rdfs:domain   :ComponentType .
     :hasNameDomain   rdfs:range xsd:string .  
  :hasNameSubDomain    a owl:DatatypeProperty .
     :hasNameSubDomain rdfs:domain   :ComponentType .
     :hasNameSubDomain rdfs:range xsd:string .  
  :hasComponentName    a owl:DatatypeProperty .
     :hasComponentName  rdfs:domain   :ComponentType .
     :hasComponentName  rdfs:range xsd:string .  
  :hasAuthorName       a owl:DatatypeProperty .
     :hasAuthorName rdfs:domain   :ComponentType .
     :hasAuthorName rdfs:range xsd:string .  
  :hasCompanyName      a owl:DatatypeProperty .
     :hasCompanyName rdfs:domain   :ComponentType .
     :hasCompanyName rdfs:range xsd:string .  
  :hasShortDescription a owl:DatatypeProperty .  
  :hasAddress          a owl:DatatypeProperty .
  :hasPhone            a owl:DatatypeProperty .
  :hasFax              a owl:DatatypeProperty .
  :hasEmail            a owl:DatatypeProperty .
  :hasWebPage          a owl:DatatypeProperty .
  :hasVersionDate      a owl:DatatypeProperty .
  :hasVersionNumber    a owl:DatatypeProperty .
  :hasRevisionNumber   a owl:DatatypeProperty . 
  :hasRevisionDate     a owl:DatatypeProperty . 
  :hasPrice            a owl:DatatypeProperty .
  :hasNumberOfUsed     a owl:DatatypeProperty .

 #-- Quality of Service (QoS) properties ----------

  :needROM                 a owl:DatatypeProperty .      
  :needRAM                 a owl:DatatypeProperty .
  :hasResponseTime    a owl:DatatypeProperty .
  :hardwarePlataform   a owl:DatatypeProperty .
  :hasSizeInBytes         a owl:DatatypeProperty .

 #-- Methods and Parameters -----------------------

  :hasMethodName a owl:DatatypeProperty .
  :hasMethodName  rdfs:domain   :Method .
  :hasMethodName  rdfs:range xsd:string . 

  :NomTypeRet    a owl:DatatypeProperty ;
                  rdfs:domain   :Method ;
                  rdfs:range xsd:string . 

  :hasNumParMethod a owl:DatatypeProperty ;
                     rdfs:domain   :Method ;
                     rdfs:range xsd:string . 

  :hasNumParameters a owl:DatatypeProperty .
  :hasNumParameters  rdfs:domain   :Method .
  :hasNumParameters  rdfs:range xsd:integer .   

  :hasIndexOrder a owl:DatatypeProperty .
  :hasIndexOrder  rdfs:domain   :Parameter .
  :hasIndexOrder  rdfs:range xsd:integer .

  :hasOSversion a owl:DatatypeProperty .
  :hasOSversion  rdfs:domain   :OperatingSystem ;
                 rdfs:range xsd:integer .

 #-- Contracts, Precondition, Postcondition e Invariant -----------------
 
  :hasPrecond  a owl:ObjectProperty ;
                rdfs:domain   :Method ;
                rdfs:range    :Condition ;
                rdfs:label    "Object Property: :<Method> :hasPostcond :<Condition> ." ;
                rdfs:comment  ":Deposit :hasPostcond :Condition1 .  ".                                   

  :hasPostcond  a owl:ObjectProperty ;
                 rdfs:domain   :Method ;
                 rdfs:range    :Condition ;
                 rdfs:label    "Object Property: :<Method> :hasPostcond :<Condition> ." ;
                 rdfs:comment  ":Deposit :hasPostcond :Condition1 .  ".                                      

  :hasInvariant  a owl:ObjectProperty ;  #-- No se puede definir una misma propiedad como Object and Datatype
                  rdfs:domain   :Method ;       
                  rdfs:domain   :Interface ;        
                  rdfs:range    :Condition ;     
                  rdfs:label    "Object Property: :<Method> :hasInvariant :<Condition> ." ;
                  rdfs:comment  ":Deposit :hasInvariant :Condition2 .  ".               

  :hasVariable   a owl:ObjectProperty ;        # El Dominio y el Rango pueden ser el mismo, 
                   rdfs:domain   :Condition ;  # se vuelve recursivo
                   rdfs:range    :Parameter ;
                   rdfs:range    :Condition ;
                   rdfs:range    :Variable .    
 
  :hasVariable1  a owl:ObjectProperty ;        # El Dominio y el Rango pueden ser el mismo, 
                   rdfs:domain   :Condition ;  # se vuelve recursivo
                   rdfs:range    :Parameter ;
                   rdfs:range    :Condition ;
                   rdfs:range    :Variable .    

 :hasVariableName1 a owl:DatatypeProperty ;
                 rdfs:domain   :Condition ;
                 rdfs:range xsd:string .
                                 
 :hasVariable2   a owl:ObjectProperty ;        
                   rdfs:domain   :Condition ;  
                   rdfs:range    :Parameter ;
                   rdfs:range    :Condition ;
                   rdfs:range    :Variable .          

 :hasVariableName2 a owl:DatatypeProperty ;
                 rdfs:domain   :Condition ;
                 rdfs:range xsd:string .

   :hasNumber   a owl:DatatypeProperty ;
                 rdfs:domain   :Condition ;
                 rdfs:range xsd:integer .
                
   :hasOperator  a owl:DatatypeProperty ;
                  rdfs:domain   :Condition ;
                  rdfs:range xsd:string .
   
   :hasArithmeticOperator a owl:DatatypeProperty ;
                  rdfs:domain   :Condition ;
                  rdfs:range xsd:string .

   :hasCallMethod  a owl:DatatypeProperty ;
                  rdfs:domain   :Condition ;
                  rdfs:range   xsd:string .   

   :hasCallMethod2  a owl:DatatypeProperty ;
                  rdfs:domain   :Condition ;
                  rdfs:range   xsd:string .   

   :symbolOperator a owl:DatatypeProperty ;
                  rdfs:domain   :OperatorLogic ;
                  rdfs:range xsd:string .

   :hasConnector a owl:ObjectProperty ;         # Permite unir 2 condiciones por medio de 
                  rdfs:domain   :Condition ;            # 1 conector logico and o or
                  rdfs:range    :OperatorLogic .      # or o and     
        
   :hasConstant   a owl:DatatypeProperty ;        # Una Invariante o Precondicion puede ser Texto
                  rdfs:domain   xsd:string .         # una constante true, false o empty (cadena vacia)
                  
 #-----------------------------------------------   rdfs:range  xsd:string .   

   :hasVarName a owl:ObjectProperty ;
                rdfs:domain :Condition ; 
                rdfs:range  :Variable .      

 #-- Interface ----------------------------------------------------------

  :hasInterfaceName a owl:DatatypeProperty ;
                     rdfs:domain   :Interface ;   #Decia :Method
                     rdfs:range xsd:string . 
  
  :hasNumMethods   a owl:DatatypeProperty ;
                    rdfs:domain   :Interface ;
                    rdfs:range xsd:integer .  

  :hasReturnValue a owl:DatatypeProperty ;
                   rdfs:domain   :Interface ;
                   rdfs:range xsd:boolean .  

  :optionalParameter a owl:DatatypeProperty ;  
                      rdfs:domain   :Method ;
                      rdfs:range xsd:boolean .

 #-- hasNamePattern & hasTypeNamePattern --------------------------------

  :hasNamePattern a owl:DatatypeProperty ; 
                   rdfs:domain   :ComponentType .

  :hasNameDomain  a owl:DatatypeProperty ;
                   rdfs:domain   :ComponentType ;
                  rdfs:range  xsd:string .

  :hasNameSubDomain a owl:DatatypeProperty ;
                     rdfs:domain   :ComponentType ;
                     rdfs:range xsd:string .

  :hasNameSubSubDomain a owl:DatatypeProperty ;
                     rdfs:domain   :ComponentType ;
                     rdfs:range xsd:string .
#----------------------------------------------------------------------------------------------
#-- Object Property Declaration ---------------------------------------------------------------
#----------------------------------------------------------------------------------------------

  #-- useInterface ---------------------------------

  :useInterface  rdf:type owl:ObjectProperty ;
                rdfs:domain :Contract ;
                rdfs:range  :Interface .

  #-- isInterfaceOf ---------------------------------

  :isInterfaceOf rdf:type owl:ObjectProperty ;
                rdfs:domain :Interface ;
                rdfs:range  :Component .

  #-- linkParameter ---------------------------------

  :linkParameter rdfs:domain :Parameter ;
                 rdfs:range  :Parameter ;
                  rdf:type owl:ObjectProperty .

  :hasContract rdf:type owl:ObjectProperty ;
              rdfs:domain :Component ;
              rdfs:range  :Contract ;
               rdf:type owl:FunctionalProperty .

  :isInstanceOf rdf:type owl:ObjectProperty .
  :isInstanceOf rdfs:domain :Instance .
  :isInstanceOf rdfs:range  :Component .

  #-- Parameters -----------------------------------

  :hasNameDir a owl:DatatypeProperty ;
               rdfs:domain   :Parameter ;
               rdfs:range xsd:string .

  :hasNameTypePar a owl:DatatypeProperty ;
                   rdfs:domain   :Parameter ;
                   rdfs:range xsd:string .

  :hasNameIndex  a owl:DatatypeProperty ;
                  rdfs:domain   :Parameter ;
                  rdfs:range xsd:string .

  :hasDirection rdf:type  owl:ObjectProperty ;
               rdfs:domain   :Parameter ;
               rdfs:range    :ParameterDirection .

  :isInputOf rdf:type  owl:ObjectProperty ;
            rdfs:domain   :Parameter ;
            rdfs:range   :Parameter .

  :isOutputOf rdf:type owl:ObjectProperty ;
             rdfs:domain  :Parameter ;
             rdfs:range   :Parameter .

  #-- typeReturn -----------------------------------

  :typeReturn  rdf:type owl:ObjectProperty ;
              rdfs:domain  :Method ;
              rdfs:range   :DataType .

  :hasDataTypeParameter rdf:type owl:ObjectProperty ;
                rdfs:domain  :Parameter ;
                rdfs:range   :DataType .

  :typeInterface rdf:type owl:ObjectProperty ;
                rdfs:domain  :Interface ;
                rdfs:range   :DataType .

  #-- hasMethod ----------------------------------

  :hasMethod a owl:ObjectProperty ;
              rdfs:domain :Interface ;
              rdfs:range  :Method .    

  :hasMethod2 a owl:ObjectProperty ;
              rdfs:domain :Interface ;
              rdfs:range  :Method .    

  :hasReturn a owl:ObjectProperty ;
              rdfs:domain :Method ;
              rdfs:range  :DataType .             

  :hasVisibility  rdf:type owl:ObjectProperty .
  :hasVisibility rdfs:domain  :Method .
  :hasVisibility rdfs:domain  :Interface .
  :hasVisibility rdfs:range   :Visibility .

  :hasMatch  rdf:type owl:ObjectProperty .    #-- It is a Object Property. FunctionalProperty only 1 value accept
  :hasMatch rdfs:domain :Interface .          #-- Its domain is an Interface
  :hasMatch rdfs:range  :Interface .          #-- Its range is an Interface
  :hasMatch rdf:type owl:TransitiveProperty . #-- A match B and B match C => A match C
  :hasMatch rdf:type owl:SymmetricProperty .  #-- A match B => B match A
  
  :hasInstance a owl:ObjectProperty .
  :hasInstance  rdfs:domain :Component .
  :hasInstance  rdfs:range  :Instance .

  :hasInterface a owl:ObjectProperty .
  :hasInterface  rdfs:domain :Component .
  :hasInterface  rdfs:range  :Interface .

  :hasParameter a owl:ObjectProperty .
  :hasParameter  rdfs:domain :Method .
  :hasParameter  rdfs:range  :Parameter .

  :hasParameterName a owl:DatatypeProperty ;
             rdfs:domain :Method ;
             rdfs:range  xsd:string .

  :hasNameParameter a owl:DatatypeProperty ;
                  rdfs:domain   :Parameter ;
                  rdfs:range xsd:string .

#---- Seccion de codigos para controlar el backtrack de SPARQL

  :hasCodeParameter a owl:DatatypeProperty ;
                  rdfs:domain   :Parameter ;
                  rdfs:range xsd:string .

  :hasCodeMethod  a owl:DatatypeProperty ;
                  rdfs:domain   :Method ;
                  rdfs:range xsd:string .

  :hasCodeType   a owl:DatatypeProperty ;
                  rdfs:domain   :Parameter ;
                  rdfs:range xsd:string .

  :hasCodeIndex  a owl:DatatypeProperty ;
                  rdfs:domain   :Parameter ;
                  rdfs:range xsd:string .
#-- isSubTypeOf -----------------------------------  

   :isSubTypeOf a owl:ObjectProperty ;
                  rdfs:domain :DataType ;
                  rdfs:range  :Datatype .

  :int    a :DataType .
  :long   a :DataType .
  :char   a :DataType .
  :string a :DataType .

  :int    :isSubTypeOf :long .
  :char   :isSubTypeOf :string .
  :int    :isSubTypeOf :int .
  :long   :isSubTypeOf :long .
  :char   :isSubTypeOf :char .
  :string :isSubTypeOf :string .
#---------------------------------------------------- 
   

############################## Codigo del Archivo Ontologia: Atm.n3 #######################

:atm a :ComponentType .
:atm :hasComponentName "atm" .
:atm :hasDomain :bank .
:atm :hasNameDomain "bank" .
:atm :hasSubDomain :atm .
:atm :hasNameSubDomain "atm" .
:iatmuser378  a :Interface .
:iatmuser378  :typeInterface :required .
:atm  :hasInterface :iatmuser378 .
:iatmuser378  :hasInterfaceName "iatmuser" .
:iatmuser378  :hasMethod :readpin378 .
:iatmuser378  :hasMethod2 :readpin .
:readpin  :hasMethodName "readpin" .
:readpin378  :hasMethodName "readpin" .
:readpin378  a :Method .
:readpin378  :typeReturn :void.
:readpin378  :NomTypeRet "void".
:readpin378  :hasParameter  :cardno378 .
:readpin378  :hasParameterName  "cardno1" .
:cardno378  :hasNameParameter "cardno1" .
:cardno378  :hasDirection  :in .
:cardno378  :hasNameDir "in" .
:int a :Int .
:cardno378  :hasDataTypeParameter  :int .
:cardno378  :hasNameTypePar "int1" .
:cardno378  :hasIndexOrder 1 .
:cardno378  :hasNameIndex  "1" .
:readpin378  :hasParameter  :password378 .
:readpin378  :hasParameterName  "password2" .
:password378  :hasNameParameter "password2" .
:password378  :hasDirection  :in .
:password378  :hasNameDir "in" .
:string a :String .
:password378  :hasDataTypeParameter  :string .
:password378  :hasNameTypePar "string2" .
:password378  :hasIndexOrder 2 .
:password378  :hasNameIndex  "2" .
:readpin378  :hasNumParameters  2 .
:readpin378  :hasNumParMethod  "2" .
:iatmuser378  :hasInterfaceName "iatmuser" .
:iatmuser378  :hasMethod :setmenu378 .
:iatmuser378  :hasMethod2 :setmenu .
:setmenu  :hasMethodName "setmenu" .
:setmenu378  :hasMethodName "setmenu" .
:setmenu378  a :Method .
:setmenu378  :typeReturn :void.
:setmenu378  :NomTypeRet "void".
:setmenu378  :hasNumParameters  0 .
:setmenu378  :hasNumParMethod  "0" .
:iatmuser378  :hasInterfaceName "iatmuser" .
:iatmuser378  :hasMethod :setmessages378 .
:iatmuser378  :hasMethod2 :setmessages .
:setmessages  :hasMethodName "setmessages" .
:setmessages378  :hasMethodName "setmessages" .
:setmessages378  a :Method .
:setmessages378  :typeReturn :void.
:setmessages378  :NomTypeRet "void".
:setmessages378  :hasNumParameters  0 .
:setmessages378  :hasNumParMethod  "0" .
:iatmuser  :hasNumMethods 3 .
:iatmprinter771  a :Interface .
:iatmprinter771  :typeInterface :required .
:atm  :hasInterface :iatmprinter771 .
:iatmprinter771  :hasInterfaceName "iatmprinter" .
:iatmprinter771  :hasMethod :printreceipt771 .
:iatmprinter771  :hasMethod2 :printreceipt .
:printreceipt  :hasMethodName "printreceipt" .
:printreceipt771  :hasMethodName "printreceipt" .
:printreceipt771  a :Method .
:printreceipt771  :typeReturn :void.
:printreceipt771  :NomTypeRet "void".
:printreceipt771  :hasNumParameters  0 .
:printreceipt771  :hasNumParMethod  "0" .
:iatmprinter  :hasNumMethods 1 .
:iatmbank334  a :Interface .
:iatmbank334  :typeInterface :required .
:atm  :hasInterface :iatmbank334 .
:condition1  a :Condition .
:iatmbank  :hasInvariant :condition1 .
:condition1   :hasCallMethod "balance()" .
:condition1  :hasOperator ">=" .
:condition1   :hasCallMethod2 "creditlimit()" .
:iatmbank334  :hasInterfaceName "iatmbank" .
:iatmbank334  :hasMethod :deposit334 .
:iatmbank334  :hasMethod2 :deposit .
:deposit  :hasMethodName "deposit" .
:deposit334  :hasMethodName "deposit" .
:deposit334  a :Method .
:deposit334  :typeReturn :void.
:deposit334  :NomTypeRet "void".
:deposit334  :hasParameter  :clientnum334 .
:deposit334  :hasParameterName  "clientnum1" .
:clientnum334  :hasNameParameter "clientnum1" .
:clientnum334  :hasDirection  :in .
:clientnum334  :hasNameDir "in" .
:int a :Int .
:clientnum334  :hasDataTypeParameter  :int .
:clientnum334  :hasNameTypePar "int1" .
:clientnum334  :hasIndexOrder 1 .
:clientnum334  :hasNameIndex  "1" .
:deposit334  :hasParameter  :amount334 .
:deposit334  :hasParameterName  "amount2" .
:amount334  :hasNameParameter "amount2" .
:amount334  :hasDirection  :in .
:amount334  :hasNameDir "in" .
:string a :String .
:amount334  :hasDataTypeParameter  :string .
:amount334  :hasNameTypePar "string2" .
:amount334  :hasIndexOrder 2 .
:amount334  :hasNameIndex  "2" .
:deposit334  :hasNumParameters  2 .
:deposit334  :hasNumParMethod  "2" .
:condition2  a :Condition .
:deposit334  :hasPrecond :condition2 .
:condition2   :hasVariable :amount .
:condition2   :hasVariableName "amount" .
:condition2   :hasOperator ">" .
:condition2   :hasNumber 0 .
:condition3  a :Condition .
:deposit334  :hasPrecond :condition3 .
:condition3   :hasCallMethod "validclient(numclient)" .
:condition3  :hasOperator "==" .
:true   a :DataType .
:condition3 :hasConstant "true" .
:condition4  a :Condition .
:deposit334  :hasPostcond :condition4 .
:condition4   :hasVariable :selfamount .
:condition4   :hasVariableName "selfamount" .
:condition4  :hasOperator "=" .
:condition4   :hasVariable1 :selfamount .
:condition4   :hasVariableName1 "selfamount" .
:condition4   :hasArithmeticOperator "+" .
:amount   a :Variable .
:condition4   :hasVariable2 :amount .
:condition4   :hasVariableName2 "amount" .
:iatmbank334  :hasInterfaceName "iatmbank" .
:iatmbank334  :hasMethod :withdrawal334 .
:iatmbank334  :hasMethod2 :withdrawal .
:withdrawal  :hasMethodName "withdrawal" .
:withdrawal334  :hasMethodName "withdrawal" .
:withdrawal334  a :Method .
:withdrawal334  :typeReturn :void.
:withdrawal334  :NomTypeRet "void".
:withdrawal334  :hasParameter  :cardno334 .
:withdrawal334  :hasParameterName  "cardno1" .
:cardno334  :hasNameParameter "cardno1" .
:cardno334  :hasDirection  :out .
:cardno334  :hasNameDir "out" .
:int a :Int .
:cardno334  :hasDataTypeParameter  :int .
:cardno334  :hasNameTypePar "int1" .
:cardno334  :hasIndexOrder 1 .
:cardno334  :hasNameIndex  "1" .
:withdrawal334  :hasParameter  :password334 .
:withdrawal334  :hasParameterName  "password2" .
:password334  :hasNameParameter "password2" .
:password334  :hasDirection  :in .
:password334  :hasNameDir "in" .
:string a :String .
:password334  :hasDataTypeParameter  :string .
:password334  :hasNameTypePar "string2" .
:password334  :hasIndexOrder 2 .
:password334  :hasNameIndex  "2" .
:withdrawal334  :hasParameter  :amount334 .
:withdrawal334  :hasParameterName  "amount3" .
:amount334  :hasNameParameter "amount3" .
:amount334  :hasDirection  :in .
:amount334  :hasNameDir "in" .
:int a :Int .
:amount334  :hasDataTypeParameter  :int .
:amount334  :hasNameTypePar "int3" .
:amount334  :hasIndexOrder 3 .
:amount334  :hasNameIndex  "3" .
:withdrawal334  :hasNumParameters  3 .
:withdrawal334  :hasNumParMethod  "3" .
:condition5  a :Condition .
:withdrawal334  :hasPrecond :condition5 .
:condition5   :hasVariable :selfamount .
:condition5   :hasVariableName "selfamount" .
:condition5  :hasOperator ">=" .
:amount   a :Variable .
:condition5   :hasVariable2 :amount .
:condition5   :hasVariableName2 "amount" .
:condition6  a :Condition .
:withdrawal334  :hasPrecond :condition6 .
:condition6   :hasVariable :password .
:condition6   :hasVariableName "password" .
:condition6  :hasOperator "<>" .
:empty   a :DataType .
:condition6 :hasConstant "empty" .
:condition7  a :Condition .
:withdrawal334  :hasPrecond :condition7 .
:condition7   :hasCallMethod "validcard(cardno)" .
:condition7  :hasOperator "==" .
:true   a :DataType .
:condition7 :hasConstant "true" .
:condition8  a :Condition .
:withdrawal334  :hasPostcond :condition8 .
:condition8   :hasVariable :selfamount .
:condition8   :hasVariableName "selfamount" .
:condition8  :hasOperator "=" .
:condition8   :hasVariable1 :selfamount .
:condition8   :hasVariableName1 "selfamount" .
:condition8   :hasArithmeticOperator "+" .
:amount   a :Variable .
:condition8   :hasVariable2 :amount .
:condition8   :hasVariableName2 "amount" .
:condition9  a :Condition .
:withdrawal334  :hasInvariant :condition9 .
:condition9   :hasCallMethod "length(password)" .
:condition9   :hasOperator ">" .
:condition9   :hasNumber 5 .
:iatmbank334  :hasInterfaceName "iatmbank" .
:iatmbank334  :hasMethod :createsession334 .
:iatmbank334  :hasMethod2 :createsession .
:createsession  :hasMethodName "createsession" .
:createsession334  :hasMethodName "createsession" .
:createsession334  a :Method .
:createsession334  :typeReturn :long.
:createsession334  :NomTypeRet "long".
:createsession334  :hasNumParameters  0 .
:createsession334  :hasNumParMethod  "0" .
:iatmbank334  :hasInterfaceName "iatmbank" .
:iatmbank334  :hasMethod :locatebankv2334 .
:iatmbank334  :hasMethod2 :locatebankv2 .
:locatebankv2  :hasMethodName "locatebankv2" .
:locatebankv2334  :hasMethodName "locatebankv2" .
:locatebankv2334  a :Method .
:locatebankv2334  :typeReturn :void.
:locatebankv2334  :NomTypeRet "void".
:locatebankv2334  :hasNumParameters  0 .
:locatebankv2334  :hasNumParMethod  "0" .
:iatmbank  :hasNumMethods 4 .
:iatmcard755  a :Interface .
:iatmcard755  :typeInterface :required .
:atm  :hasInterface :iatmcard755 .
:iatmcard755  :hasInterfaceName "iatmcard" .
:iatmcard755  :hasMethod :readcard755 .
:iatmcard755  :hasMethod2 :readcard .
:readcard  :hasMethodName "readcard" .
:readcard755  :hasMethodName "readcard" .
:readcard755  a :Method .
:readcard755  :typeReturn :void.
:readcard755  :NomTypeRet "void".
:readcard755  :hasParameter  :cardno755 .
:readcard755  :hasParameterName  "cardno1" .
:cardno755  :hasNameParameter "cardno1" .
:cardno755  :hasDirection  :in .
:cardno755  :hasNameDir "in" .
:int a :Int .
:cardno755  :hasDataTypeParameter  :int .
:cardno755  :hasNameTypePar "int1" .
:cardno755  :hasIndexOrder 1 .
:cardno755  :hasNameIndex  "1" .
:readcard755  :hasParameter  :password755 .
:readcard755  :hasParameterName  "password2" .
:password755  :hasNameParameter "password2" .
:password755  :hasDirection  :in .
:password755  :hasNameDir "in" .
:string a :String .
:password755  :hasDataTypeParameter  :string .
:password755  :hasNameTypePar "string2" .
:password755  :hasIndexOrder 2 .
:password755  :hasNameIndex  "2" .
:readcard755  :hasNumParameters  2 .
:readcard755  :hasNumParMethod  "2" .
:iatmcard755  :hasInterfaceName "iatmcard" .
:iatmcard755  :hasMethod :ejectcard755 .
:iatmcard755  :hasMethod2 :ejectcard .
:ejectcard  :hasMethodName "ejectcard" .
:ejectcard755  :hasMethodName "ejectcard" .
:ejectcard755  a :Method .
:ejectcard755  :typeReturn :int.
:ejectcard755  :NomTypeRet "int".
:ejectcard755  :hasNumParameters  0 .
:ejectcard755  :hasNumParMethod  "0" .
:iatmcard755  :hasInterfaceName "iatmcard" .
:iatmcard755  :hasMethod :consortium755 .
:iatmcard755  :hasMethod2 :consortium .
:consortium  :hasMethodName "consortium" .
:consortium755  :hasMethodName "consortium" .
:consortium755  a :Method .
:consortium755  :typeReturn :void.
:consortium755  :NomTypeRet "void".
:consortium755  :hasNumParameters  0 .
:consortium755  :hasNumParMethod  "0" .
:iatmcard  :hasNumMethods 3 .

############################## Codigo del Archivo Ontologia: Bank.n3 #######################

:bank a :ComponentType .
:bank :hasComponentName "bank" .
:bank :hasDomain :bank .
:bank :hasNameDomain "bank" .
:bank :hasSubDomain :atm .
:bank :hasNameSubDomain "atm" .
:ibank588  a :Interface .
:ibank588  :typeInterface :provided .
:bank  :hasInterface :ibank588 .
:condition10  a :Condition .
:ibank  :hasInvariant :condition10 .
:condition10   :hasCallMethod "balance()" .
:condition10  :hasOperator ">=" .
:condition10   :hasCallMethod2 "creditlimit()" .
:ibank588  :hasInterfaceName "ibank" .
:ibank588  :hasMethod :createsession588 .
:ibank588  :hasMethod2 :createsession .
:createsession  :hasMethodName "createsession" .
:createsession588  :hasMethodName "createsession" .
:createsession588  a :Method .
:createsession588  :typeReturn :void.
:createsession588  :NomTypeRet "void".
:createsession588  :hasNumParameters  0 .
:createsession588  :hasNumParMethod  "0" .
:ibank588  :hasInterfaceName "ibank" .
:ibank588  :hasMethod :locatebank588 .
:ibank588  :hasMethod2 :locatebank .
:locatebank  :hasMethodName "locatebank" .
:locatebank588  :hasMethodName "locatebank" .
:locatebank588  a :Method .
:locatebank588  :typeReturn :void.
:locatebank588  :NomTypeRet "void".
:locatebank588  :hasNumParameters  0 .
:locatebank588  :hasNumParMethod  "0" .
:ibank588  :hasInterfaceName "ibank" .
:ibank588  :hasMethod :deposit588 .
:ibank588  :hasMethod2 :deposit .
:deposit  :hasMethodName "deposit" .
:deposit588  :hasMethodName "deposit" .
:deposit588  a :Method .
:deposit588  :typeReturn :void.
:deposit588  :NomTypeRet "void".
:deposit588  :hasParameter  :amount588 .
:deposit588  :hasParameterName  "amount1" .
:amount588  :hasNameParameter "amount1" .
:amount588  :hasDirection  :in .
:amount588  :hasNameDir "in" .
:int a :Int .
:amount588  :hasDataTypeParameter  :int .
:amount588  :hasNameTypePar "int1" .
:amount588  :hasIndexOrder 1 .
:amount588  :hasNameIndex  "1" .
:deposit588  :hasParameter  :clientnum588 .
:deposit588  :hasParameterName  "clientnum2" .
:clientnum588  :hasNameParameter "clientnum2" .
:clientnum588  :hasDirection  :in .
:clientnum588  :hasNameDir "in" .
:int a :Int .
:clientnum588  :hasDataTypeParameter  :int .
:clientnum588  :hasNameTypePar "int2" .
:clientnum588  :hasIndexOrder 2 .
:clientnum588  :hasNameIndex  "2" .
:deposit588  :hasNumParameters  2 .
:deposit588  :hasNumParMethod  "2" .
:condition11  a :Condition .
:deposit588  :hasPrecond :condition11 .
:condition11   :hasVariable :amount .
:condition11   :hasVariableName "amount" .
:condition11   :hasOperator ">" .
:condition11   :hasNumber 0 .
:condition12  a :Condition .
:deposit588  :hasPrecond :condition12 .
:condition12   :hasCallMethod "validclient(numclient)" .
:condition12  :hasOperator "==" .
:true   a :DataType .
:condition12 :hasConstant "true" .
:condition13  a :Condition .
:deposit588  :hasPostcond :condition13 .
:condition13   :hasVariable :selfamount .
:condition13   :hasVariableName "selfamount" .
:condition13  :hasOperator "=" .
:condition13   :hasVariable1 :selfamount .
:condition13   :hasVariableName1 "selfamount" .
:condition13   :hasArithmeticOperator "+" .
:amount   a :Variable .
:condition13   :hasVariable2 :amount .
:condition13   :hasVariableName2 "amount" .
:ibank588  :hasInterfaceName "ibank" .
:ibank588  :hasMethod :withdrawal588 .
:ibank588  :hasMethod2 :withdrawal .
:withdrawal  :hasMethodName "withdrawal" .
:withdrawal588  :hasMethodName "withdrawal" .
:withdrawal588  a :Method .
:withdrawal588  :typeReturn :void.
:withdrawal588  :NomTypeRet "void".
:withdrawal588  :hasParameter  :cardno588 .
:withdrawal588  :hasParameterName  "cardno1" .
:cardno588  :hasNameParameter "cardno1" .
:cardno588  :hasDirection  :in .
:cardno588  :hasNameDir "in" .
:int a :Int .
:cardno588  :hasDataTypeParameter  :int .
:cardno588  :hasNameTypePar "int1" .
:cardno588  :hasIndexOrder 1 .
:cardno588  :hasNameIndex  "1" .
:withdrawal588  :hasParameter  :password588 .
:withdrawal588  :hasParameterName  "password2" .
:password588  :hasNameParameter "password2" .
:password588  :hasDirection  :in .
:password588  :hasNameDir "in" .
:string a :String .
:password588  :hasDataTypeParameter  :string .
:password588  :hasNameTypePar "string2" .
:password588  :hasIndexOrder 2 .
:password588  :hasNameIndex  "2" .
:withdrawal588  :hasParameter  :amount588 .
:withdrawal588  :hasParameterName  "amount3" .
:amount588  :hasNameParameter "amount3" .
:amount588  :hasDirection  :in .
:amount588  :hasNameDir "in" .
:int a :Int .
:amount588  :hasDataTypeParameter  :int .
:amount588  :hasNameTypePar "int3" .
:amount588  :hasIndexOrder 3 .
:amount588  :hasNameIndex  "3" .
:withdrawal588  :hasNumParameters  3 .
:withdrawal588  :hasNumParMethod  "3" .
:condition14  a :Condition .
:withdrawal588  :hasPrecond :condition14 .
:condition14   :hasVariable :selfamount .
:condition14   :hasVariableName "selfamount" .
:condition14   :hasOperator ">" .
:amount   a :Variable .
:condition14   :hasVariable2 :amount .
:condition14   :hasVariableName2 "amount" .
:condition15  a :Condition .
:withdrawal588  :hasPrecond :condition15 .
:condition15   :hasVariable :password .
:condition15   :hasVariableName "password" .
:condition15  :hasOperator "<>" .
:empty   a :DataType .
:condition15 :hasConstant "empty" .
:condition16  a :Condition .
:withdrawal588  :hasPrecond :condition16 .
:condition16   :hasCallMethod "validcard(cardno)" .
:condition16  :hasOperator "==" .
:true   a :DataType .
:condition16 :hasConstant "true" .
:condition17  a :Condition .
:withdrawal588  :hasPostcond :condition17 .
:condition17   :hasVariable :selfamount .
:condition17   :hasVariableName "selfamount" .
:condition17  :hasOperator "=" .
:condition17   :hasVariable1 :selfamount .
:condition17   :hasVariableName1 "selfamount" .
:condition17   :hasArithmeticOperator "-" .
:amount   a :Variable .
:condition17   :hasVariable2 :amount .
:condition17   :hasVariableName2 "amount" .
:condition18  a :Condition .
:withdrawal588  :hasInvariant :condition18 .
:condition18   :hasCallMethod "length(password)" .
:condition18   :hasOperator ">" .
:condition18   :hasNumber 7 .
:ibank  :hasNumMethods 4 .

############################## Codigo del Archivo Ontologia: Card.n3 #######################

:card a :ComponentType .
:card :hasComponentName "card" .
:card :hasDomain :card .
:card :hasNameDomain "card" .
:card :hasSubDomain :atm .
:card :hasNameSubDomain "atm" .
:icard149  a :Interface .
:icard149  :typeInterface :provided .
:card  :hasInterface :icard149 .
:icard149  :hasInterfaceName "icard" .
:icard149  :hasMethod :readcard149 .
:icard149  :hasMethod2 :readcard .
:readcard  :hasMethodName "readcard" .
:readcard149  :hasMethodName "readcard" .
:readcard149  a :Method .
:readcard149  :typeReturn :void.
:readcard149  :NomTypeRet "void".
:readcard149  :hasParameter  :cardno149 .
:readcard149  :hasParameterName  "cardno1" .
:cardno149  :hasNameParameter "cardno1" .
:cardno149  :hasDirection  :in .
:cardno149  :hasNameDir "in" .
:int a :Int .
:cardno149  :hasDataTypeParameter  :int .
:cardno149  :hasNameTypePar "int1" .
:cardno149  :hasIndexOrder 1 .
:cardno149  :hasNameIndex  "1" .
:readcard149  :hasNumParameters  1 .
:readcard149  :hasNumParMethod  "1" .
:icard149  :hasInterfaceName "icard" .
:icard149  :hasMethod :ejectcard149 .
:icard149  :hasMethod2 :ejectcard .
:ejectcard  :hasMethodName "ejectcard" .
:ejectcard149  :hasMethodName "ejectcard" .
:ejectcard149  a :Method .
:ejectcard149  :typeReturn :void.
:ejectcard149  :NomTypeRet "void".
:ejectcard149  :hasNumParameters  0 .
:ejectcard149  :hasNumParMethod  "0" .
:icard  :hasNumMethods 2 .

############################## Codigo del Archivo Ontologia: Printer.n3 #######################

:printer a :ComponentType .
:printer :hasComponentName "printer" .
:printer :hasDomain :printer .
:printer :hasNameDomain "printer" .
:printer :hasSubDomain :atm .
:printer :hasNameSubDomain "atm" .
:iprinter237  a :Interface .
:iprinter237  :typeInterface :provided .
:printer  :hasInterface :iprinter237 .
:iprinter237  :hasInterfaceName "iprinter" .
:iprinter237  :hasMethod :printreceipt237 .
:iprinter237  :hasMethod2 :printreceipt .
:printreceipt  :hasMethodName "printreceipt" .
:printreceipt237  :hasMethodName "printreceipt" .
:printreceipt237  a :Method .
:printreceipt237  :typeReturn :void.
:printreceipt237  :NomTypeRet "void".
:printreceipt237  :hasNumParameters  0 .
:printreceipt237  :hasNumParMethod  "0" .
:iprinter  :hasNumMethods 1 .

############################## Codigo del Archivo Ontologia: UserConsole.n3 #######################

:userconsole a :ComponentType .
:userconsole :hasComponentName "userconsole" .
:userconsole :hasDomain :atm .
:userconsole :hasNameDomain "atm" .
:userconsole :hasSubDomain :keyboard .
:userconsole :hasNameSubDomain "keyboard" .
:iuserconsole580  a :Interface .
:iuserconsole580  :typeInterface :provided .
:userconsole  :hasInterface :iuserconsole580 .
:iuserconsole580  :hasInterfaceName "iuserconsole" .
:iuserconsole580  :hasMethod :readpin580 .
:iuserconsole580  :hasMethod2 :readpin .
:readpin  :hasMethodName "readpin" .
:readpin580  :hasMethodName "readpin" .
:readpin580  a :Method .
:readpin580  :typeReturn :void.
:readpin580  :NomTypeRet "void".
:readpin580  :hasParameter  :cardno580 .
:readpin580  :hasParameterName  "cardno1" .
:cardno580  :hasNameParameter "cardno1" .
:cardno580  :hasDirection  :in .
:cardno580  :hasNameDir "in" .
:long a :Long .
:cardno580  :hasDataTypeParameter  :long .
:cardno580  :hasNameTypePar "long1" .
:cardno580  :hasIndexOrder 1 .
:cardno580  :hasNameIndex  "1" .
:readpin580  :hasParameter  :password580 .
:readpin580  :hasParameterName  "password2" .
:password580  :hasNameParameter "password2" .
:password580  :hasDirection  :in .
:password580  :hasNameDir "in" .
:char a :Char .
:password580  :hasDataTypeParameter  :char .
:password580  :hasNameTypePar "char2" .
:password580  :hasIndexOrder 2 .
:password580  :hasNameIndex  "2" .
:readpin580  :hasNumParameters  2 .
:readpin580  :hasNumParMethod  "2" .
:iuserconsole580  :hasInterfaceName "iuserconsole" .
:iuserconsole580  :hasMethod :setmenu580 .
:iuserconsole580  :hasMethod2 :setmenu .
:setmenu  :hasMethodName "setmenu" .
:setmenu580  :hasMethodName "setmenu" .
:setmenu580  a :Method .
:setmenu580  :typeReturn :void.
:setmenu580  :NomTypeRet "void".
:setmenu580  :hasNumParameters  0 .
:setmenu580  :hasNumParMethod  "0" .
:iuserconsole580  :hasInterfaceName "iuserconsole" .
:iuserconsole580  :hasMethod :setmessages580 .
:iuserconsole580  :hasMethod2 :setmessages .
:setmessages  :hasMethodName "setmessages" .
:setmessages580  :hasMethodName "setmessages" .
:setmessages580  a :Method .
:setmessages580  :typeReturn :void.
:setmessages580  :NomTypeRet "void".
:setmessages580  :hasNumParameters  0 .
:setmessages580  :hasNumParMethod  "0" .
:iuserconsole  :hasNumMethods 3 .
